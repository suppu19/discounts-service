#name: Trigger Datadog Synthetic Test
 
# on:
#   workflow_dispatch: # Allows manual run from GitHub UI
#   push:
#     branches:
#       - main  # or your default branch
 
# jobs:
#   run-datadog-test:
#     runs-on: ubuntu-latest
 
#     env:
#       # DD_API_KEY: dfe4c19a5fcc0e199ca6007cd6d56db2
#       # DD_APP_KEY: fa4114c6f5616ada52107cea64ac9ab742be7015
#       DD_API_KEY: ${{ secrets.DD_API_KEY }}
#       DD_APP_KEY: ${{ secrets.DD_APP_KEY }}
#       DD_TEST_PUBLIC_ID: w76-br9-fbc  # Replace with your real test ID
 
#     steps:
#       - name: Trigger Datadog Synthetic Test
#         run: |
#           echo "Triggering Datadog Synthetic Test with ID $DD_TEST_PUBLIC_ID"
#           curl -X POST "https://api.datadoghq.com/api/v1/synthetics/tests/trigger/ci" \
#             -H "Accept: application/json" \
#             -H "Content-Type: application/json" \
#             -H "DD-API-KEY: ${DD_API_KEY}" \
#             -H "DD-APPLICATION-KEY: ${DD_APP_KEY}" \
#             -d "{
#               \"tests\": [
#                 {
#                   \"public_id\": \"${DD_TEST_PUBLIC_ID}\"
#                 }
#               ]
#             }"
 
# name: Trigger Datadog Synthetic Tests by Tag in Parallel
 
# on:
#   workflow_dispatch:
#   push:
#     branches:
#       - main
 
# jobs:
#   trigger-tests-by-tag:
#     runs-on: ubuntu-latest
#     env:
#       DD_API_KEY: ${{ secrets.DD_API_KEY }}
#       DD_APP_KEY: ${{ secrets.DD_APP_KEY }}
#       TEST_TAG: "CI/CD"   # Replace this with your actual tag
 
#     steps:
#       - name: Install jq (JSON parser)
#         run: sudo apt-get update && sudo apt-get install -y jq
 
#       - name: Fetch tests matching tag
#         id: fetch_tests
#         run: |
#           echo "Fetching Datadog Synthetic tests with tag: $TEST_TAG"
#           response=$(curl -s -X GET "https://api.datadoghq.com/api/v1/synthetics/tests" \
#             -H "DD-API-KEY: $DD_API_KEY" \
#             -H "DD-APPLICATION-KEY: $DD_APP_KEY")
 
#           # Extract public_ids of tests containing the tag
#           public_ids=$(echo "$response" | jq -r --arg TAG "$TEST_TAG" '.tests[] | select(.tags | index($TAG)) | .public_id')
 
#           if [ -z "$public_ids" ]; then
#             echo "No tests found with tag $TEST_TAG"
#             echo "public_ids=" >> $GITHUB_OUTPUT
#             exit 0
#           fi
 
#           # Print public_ids separated by commas for output
#           echo "public_ids=$(echo "$public_ids" | paste -sd "," -)" >> $GITHUB_OUTPUT
 
#       - name: Trigger tests in parallel
#         if: steps.fetch_tests.outputs.public_ids != ''
#         run: |
#           IFS=',' read -ra ids <<< "${{ steps.fetch_tests.outputs.public_ids }}"
#           echo "Triggering ${#ids[@]} tests in parallel..."
#           for id in "${ids[@]}"; do
#             echo "Triggering test $id"
#             curl -X POST "https://api.datadoghq.com/api/v1/synthetics/tests/trigger/ci" \
#               -H "Accept: application/json" \
#               -H "Content-Type: application/json" \
#               -H "DD-API-KEY: $DD_API_KEY" \
#               -H "DD-APPLICATION-KEY: $DD_APP_KEY" \
#               -d "{\"tests\":[{\"public_id\":\"$id\"}]}" &
#           done
#           wait
#           echo "All tests triggered."
 
name: Trigger Datadog Synthetic Tests by Tag
 
on:
  workflow_dispatch:  # Manual trigger
  push:
    branches:
      - main
 
jobs:
  trigger-tests:
    runs-on: ubuntu-latest
 
    env:
      DD_API_KEY: ${{ secrets.DD_API_KEY }}
      DD_APP_KEY: ${{ secrets.DD_APP_KEY }}
      TEST_TAG: "CI/CD"  # Only set the tag name here
 
    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq
 
      - name: Fetch and trigger tests by tag
        run: |
          echo "Finding Datadog tests with tag: $TEST_TAG"
 
          # Get all tests
          tests=$(curl -s -X GET "https://api.datadoghq.com/api/v1/synthetics/tests" \
            -H "DD-API-KEY: $DD_API_KEY" \
            -H "DD-APPLICATION-KEY: $DD_APP_KEY")
 
          # Extract public_ids of tests that contain the tag
          test_ids=$(echo "$tests" | jq -r --arg TAG "$TEST_TAG" '.tests[] | select(.tags | index($TAG)) | .public_id')
 
          if [ -z "$test_ids" ]; then
            echo "No tests found with tag: $TEST_TAG"
            exit 0
          fi
 
          echo "Found tests:"
          echo "$test_ids"
 
          # Trigger each test in parallel
          for id in $test_ids; do
            echo "Triggering test with ID: $id"
            curl -s -X POST "https://api.datadoghq.com/api/v1/synthetics/tests/trigger/ci" \
              -H "Accept: application/json" \
              -H "Content-Type: application/json" \
              -H "DD-API-KEY: $DD_API_KEY" \
              -H "DD-APPLICATION-KEY: $DD_APP_KEY" \
              -d "{\"tests\":[{\"public_id\":\"$id\"}]}" &
          done
 
          wait
          echo "All matching tests triggered."
 
